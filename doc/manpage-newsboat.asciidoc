= NEWSBOAT(1)
Alexander Batischev <eual.jp@gmail.com>


== NAME

newsboat - an RSS/Atom feed reader for text terminals


== SYNOPSIS

'newsboat' [-r] [-e] [-i opmlfile] [-u urlfile] [-c cachefile] [-C configfile] [-X] [-o] [-x <command> ...] [-h]


== DESCRIPTION

'newsboat' is an RSS/Atom feed reader for text terminals. RSS and Atom are a 
number of widely-used XML formats to transmit, publish and syndicate articles, 
for example news or blog articles.  Newsboat is designed to be used on text 
terminals on Unix or Unix-like systems such as GNU/Linux, BSD or Mac OS X.


== OPTIONS

-h, --help::
        Display help

-r, --refresh-on-start::
        Refresh feeds on start

-e, --export-to-opml::
        Export feeds as OPML to stdout

-X, --vacuum::
        Compact the cache by: 1) reclaiming the space that was left empty when
        data was deleted; and 2) defragmenting the entries in the cache. This
        *doesn't* delete the entries; for that, see 'cleanup-on-quit',
        'delete-read-articles-on-quit', 'keep-articles-days', and 'max-items'
        settings.

-v, -V, --version::
        Get version information about newsboat and the libraries it uses

-i opmlfile, --import-from-opml=opmlfile::
       Import an OPML file

-u urlfile, --url-file=urlfile::
       Use an alternative URL file

-c cachefile, --cache-file=cachefile::
       Use an alternative cache file

-C configfile, --config-file=configfile::
       Use an alternative configuration file

-x command ..., --execute=command...::
       Execute one or more commands to run newsboat unattended. Currently available
       commands are "reload" and "print-unread".

-l loglevel, --log-level=loglevel::
       Generate a logfile with a certain loglevel. Valid loglevels are 1 to 6. An
       actual logfile will only be written when you provide a logfile name.

-d logfile, --log-file=logfile::
       Use this logfile as output when logging debug messages. Please note that this
       only works when providing a loglevel.

-E file, --export-to-file=file::
       Export a list of read articles (resp. their GUIDs). This can be used to
       transfer information about read articles between different computers.

-I file, --import-from-file=file::
      Import a list of read articles and mark them as read if they are held in the
      cache. This is to be used in conjunction with the -E commandline parameter.

== FIRST STEPS

include::chapter-firststeps.asciidoc[]

== CONFIGURATION COMMANDS

include::newsboat-cfgcmds.asciidoc[]


== AVAILABLE OPERATIONS

include::newsboat-keycmds.asciidoc[]


== TAGGING

include::chapter-tagging.asciidoc[]


== SCRIPTS AND FILTERS

include::chapter-snownews.asciidoc[]


== COMMAND LINE

include::chapter-cmdline.asciidoc[]

'quit'::
        Quit newsboat
'q'::
        Alias for 'quit'

'save' <filename>::
        Save current article to <filename>

[[cmd-set]] 'set' <variable>[=<value>|&|!]::
        Set (or get) configuration variable value. Specifying a '!' after the name of a boolean configuration variable toggles their values, a '&' directly after the name of a configuration variable of any type resets its value to the documented default value.

'tag' <tagname>::
        Select a certain tag

'goto' <case-insensitive substring>::
        Go to the next feed whose name contains the case-insensitive substring.

'source' <filename> [...]::
        Load the specified configuration files. This allows it to load alternative configuration files or reload already loaded configuration files on-the-fly from the filesystem.

'dumpconfig' <filename>::
       Save current internal state of configuration to file, so that it can be instantly reused as configuration file.

'<number>'::
        Jump to the <number>th entry in the current dialog


== XDG Base Directory Support

Newsboat defaults to storing everything in '$HOME/.newsboat' directory. If
you prefer XDG, create '$HOME/.config/newsboat' and
'$HOME/.local/share/newsboat' directories, and Newsboat will use them
from there on.

If you already have some files in '$HOME/.newsboat/', move them as follows:

'config', 'urls'::
        to '$HOME/.config/newsboat/'

'cache.db', 'history.search', 'history.cmdline'::
        to '$HOME/.local/share/newsboat/'

See also a corresponding section in podboat(1).


== FILES

dotfiles::
        '$HOME/.newsboat/config'
        +
        '$HOME/.newsboat/urls'

XDG::
        '$HOME/.config/newsboat/config'
        +
        '$HOME/.config/newsboat/urls'


== ENVIRONMENT

include::chapter-environment-variables.asciidoc[]


== SEE ALSO

podboat(1)
